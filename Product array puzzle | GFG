/*Given an array nums[] of size n,
construct a Product Array P (of same size n) 
such that P[i] is equal to the product of all the elements of nums except nums[i].

Input:
n = 5
nums[] = {10, 3, 5, 6, 2}
Output:
180 600 360 300 900
Explanation: 
For i=0, P[i] = 3*5*6*2 = 180.
For i=1, P[i] = 10*5*6*2 = 600.
For i=2, P[i] = 10*3*6*2 = 360.
For i=3, P[i] = 10*3*5*2 = 300.
For i=4, P[i] = 10*3*5*6 = 900. */



 vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
        //code here      
        vector<long long int> l(n), r(n);
        
        l[0] = 1;
        r[n-1] = 1;
        
        //maintaining vector l
        for(int i = 1; i < n; i++) 
        {
            l[i] = l[i-1] * nums[i-1];
        }
        
        //maintaining vector l
        for(int i = n-2; i >= 0; i--) 
        {
            r[i] = r[i+1] * nums[i+1];
        }
        
        //storing the product of l and r corresp to every i
        for(int i = 0; i < n; i++)
        {
            nums[i] = l[i] * r[i];
        }
        
    return nums;
    }
